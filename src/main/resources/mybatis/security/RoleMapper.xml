<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.renhe.security.mapper.RoleMapper" >

    <sql id="baseColumnSql">
        id,name,created_at,updated_at
    </sql>


    <select id="findById" parameterType="string" resultType="com.renhe.security.entity.Role" >
        select
        <include refid="baseColumnSql"/>
        from usr_role where id = #{id}
    </select>


    <select id="queryByParams" parameterType="com.renhe.security.vo.ResourceVo" resultType="com.renhe.security.entity.Role" >
        select
        <include refid="baseColumnSql"/>
        from usr_role  where  id is not null
        <if test="name!=null and name !=''">
            and name like concat('%',name,'%')
        </if>
        order by created_at desc
    </select>

    <insert id="save" parameterType="com.renhe.security.entity.Role">
         insert into usr_role
         (
            id,name,created_at,updated_at
         )values(
            #{id},
            #{name},
            #{createdAt},
            #{updatedAt}

         )
    </insert>

    <update id="destroy" parameterType="string">
       delete from usr_role where id = #{id}
    </update>

    <update id="update" parameterType="com.renhe.security.entity.Role">
        update usr_resource
        <set>
            <if test="name!=null">
                name = #{name},
            </if>

        </set>
        where id = #{id}
    </update>


    <select id="findByRoleId" parameterType="string">
        select
         a.id, a.name, a.code, a.type, a.url, a.icon, a.visible, a.parent_id, a.seq, a.created_at, a.updated_at
        from  usr_resource a,usr_role_resource b
        where a.id = b.resource_id
        and b.role_id = #{roleId}
    </select>

    <select id="findByRoleIds" parameterType="java.util.List">
        select
         a.id, a.name, a.code, a.type, a.url, a.icon, a.visible, a.parent_id, a.seq, a.created_at, a.updated_at
        from  usr_resource a,usr_role_resource b
        where a.id = b.resource_id
        and b.role_id in
        <foreach collection="roleIds" item="item" open="(" close=")" separator=",">
            #{item}
        </foreach>
    </select>



</mapper>